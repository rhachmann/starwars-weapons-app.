
import streamlit as st
import sqlite3
import pandas as pd

# Forbind til databasen
conn = sqlite3.connect("starwars_weapons_final.db")
cursor = conn.cursor()

# Hent unikke f√¶rdigheder
skills_query = cursor.execute("SELECT DISTINCT skill FROM weapons ORDER BY skill").fetchall()
skill_options = ["Alle"] + [s[0] for s in skills_query]

# Konfigurer Streamlit
st.set_page_config(page_title="Star Wars V√•benbrowser", layout="wide")
st.title("üî´ Star Wars RPG V√•benbrowser")

# Sektion: Tilf√∏j nyt v√•ben
st.subheader("‚ûï Tilf√∏j nyt v√•ben")
with st.form("add_weapon_form"):
    col1, col2, col3 = st.columns(3)
    col4, col5, col6 = st.columns(3)

    name = col1.text_input("Navn")
    skill = col2.text_input("F√¶rdighed")
    damage = col3.text_input("Skade")
    crit = col4.text_input("Crit")
    range_ = col5.text_input("R√¶kkevidde")
    encum = col6.text_input("Encumbrance")

    hp = col1.text_input("HP")
    restricted = col2.selectbox("Restricted", ["No", "Yes"])
    price = col3.text_input("Pris")
    rarity = col4.text_input("Sj√¶ldenhed")
    special = col5.text_input("Special")

    submitted = st.form_submit_button("Tilf√∏j v√•ben")

    if submitted:
        cursor.execute("""
            INSERT INTO weapons (name, skill, damage, crit, range, encum, hp, restricted, price, rarity, special)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        """, (name, skill, damage, crit, range_, encum, hp, restricted, price, rarity, special))
        conn.commit()
        st.success(f"V√•benet '{name}' blev tilf√∏jet!")

# UI: S√∏gning og filtre
st.subheader("üîé S√∏g i v√•ben")
col1, col2, col3 = st.columns(3)

with col1:
    search_term = st.text_input("S√∏g efter v√•ben (navn eller special)", "")

with col2:
    skill_filter = st.selectbox("Filtr√©r efter f√¶rdighed", skill_options)

with col3:
    rarity_range = st.slider("Sj√¶ldenhed", 1, 10, (1, 10))

# SQL-foresp√∏rgsel
query = "SELECT * FROM weapons WHERE 1=1"
params = []

if search_term:
    query += " AND (name LIKE ? OR special LIKE ?)"
    params += [f"%{search_term}%", f"%{search_term}%"]

if skill_filter != "Alle":
    query += " AND skill = ?"
    params.append(skill_filter)

query += " AND rarity BETWEEN ? AND ?"
params += list(rarity_range)

# Udf√∏r foresp√∏rgsel og vis resultater
results = pd.read_sql_query(query, conn, params=params)
st.dataframe(results, use_container_width=True)

conn.close()
